{
  "questions": [
    {
      "question": "Which is the most popular JavaScript framework?",
      "options": ["Angular", "React", "Svelte", "Vue"],
      "correctOption": 1,
      "points": 10
    },
    {
      "question": "Which company invented React?",
      "options": ["Google", "Apple", "Netflix", "Facebook"],
      "correctOption": 3,
      "points": 10
    },
    {
      "question": "What's the fundamental building block of React apps?",
      "options": ["Components", "Blocks", "Elements", "Effects"],
      "correctOption": 0,
      "points": 10
    },
    {
      "question": "What's the name of the syntax we use to describe the UI in React components?",
      "options": ["FBJ", "Babel", "JSX", "ES2015"],
      "correctOption": 2,
      "points": 10
    },
    {
      "question": "How does data flow naturally in React apps?",
      "options": [
        "From parents to children",
        "From children to parents",
        "Both ways",
        "The developers decides"
      ],
      "correctOption": 0,
      "points": 10
    },
    {
      "question": "How to pass data into a child component?",
      "options": ["State", "Props", "PropTypes", "Parameters"],
      "correctOption": 1,
      "points": 10
    },
    {
      "question": "When to use derived state?",
      "options": [
        "Whenever the state should not trigger a re-render",
        "Whenever the state can be synchronized with an effect",
        "Whenever the state should be accessible to all components",
        "Whenever the state can be computed from another state variable"
      ],
      "correctOption": 3,
      "points": 30
    },
    {
      "question": "What triggers a UI re-render in React?",
      "options": [
        "Running an effect",
        "Passing props",
        "Updating state",
        "Adding event listeners to DOM elements"
      ],
      "correctOption": 2,
      "points": 20
    },
    {
      "question": "When do we directly \"touch\" the DOM in React?",
      "options": [
        "When we need to listen to an event",
        "When we need to change the UI",
        "When we need to add styles",
        "Almost never"
      ],
      "correctOption": 3,
      "points": 20
    },
    {
      "question": "In what situation do we use a callback to update state?",
      "options": [
        "When updating the state will be slow",
        "When the updated state is very data-intensive",
        "When the state update should happen faster",
        "When the new state depends on the previous state"
      ],
      "correctOption": 3,
      "points": 30
    },
    {
      "question": "If we pass a function to useState, when will that function be called?",
      "options": [
        "On each re-render",
        "Each time we update the state",
        "Only on the initial render",
        "The first time we update the state"
      ],
      "correctOption": 2,
      "points": 30
    },
    {
      "question": "Which hook to use for an API request on the component's initial render?",
      "options": ["useState", "useEffect", "useRef", "useReducer"],
      "correctOption": 1,
      "points": 10
    },
    {
      "question": "Which variables should go into the useEffect dependency array?",
      "options": [
        "Usually none",
        "All our state variables",
        "All state and props referenced in the effect",
        "All variables needed for clean up"
      ],
      "correctOption": 2,
      "points": 30
    },
    {
      "question": "An effect will always run on the initial render.",
      "options": [
        "True",
        "It depends on the dependency array",
        "False",
        "In depends on the code in the effect"
      ],
      "correctOption": 0,
      "points": 30
    },
    {
      "question": "When will an effect run if it doesn't have a dependency array?",
      "options": [
        "Only when the component mounts",
        "Only when the component unmounts",
        "The first time the component re-renders",
        "Each time the component is re-rendered"
      ],
      "correctOption": 3,
      "points": 20
    },
    {
      "question": "What is conditional rendering in React?",
      "options": [
        "Rendering components based on user input",
        "Rendering components conditionally based on a boolean expression",
        "Rendering components sequentially",
        "Rendering components in parallel"
      ],
      "correctOption": 1,
      "points": 10
    },
    {
      "question": "What is React Router?",
      "options": [
        "A library for handling HTTP requests in React",
        "A tool for managing state in React components",
        "A standard library for routing in React",
        "A utility for styling React components"
      ],
      "correctOption": 2,
      "points": 10
    },
    {
      "question": "Which component is used to render only the first route that matches the location in React Router?",
      "options": ["<Switch>", "<Route>", "<Link>", "<Router>"],
      "correctOption": 0,
      "points": 10
    },
    {
      "question": "What are the lifecycle methods of React components?",
      "options": [
        "Initialization, Mounting, Updating, Unmounting",
        "Construction, Rendering, Updating, Destruction",
        "Creation, Rendering, Modification, Deletion",
        "Initialization, Mounting, Updating, Destruction"
      ],
      "correctOption": 3,
      "points": 20
    },
    {
      "question": "What is the purpose of the Link component in React Router?",
      "options": [
        "To create links to different routes",
        "To define route parameters",
        "To handle form submissions",
        "To manage state between components"
      ],
      "correctOption": 0,
      "points": 10
    },
    {
      "question": "What are Pure Components in React?",
      "options": [
        "Components that only render once",
        "Components that don’t have any state",
        "Components that don’t re-render unnecessarily",
        "Components that use only functional syntax"
      ],
      "correctOption": 2,
      "points": 20
    },
    {
      "question": "How can you achieve transversal of lists in React?",
      "options": [
        "Using forEach() method",
        "Using map() method",
        "Using filter() method",
        "Using reduce() method"
      ],
      "correctOption": 1,
      "points": 20
    },
    {
      "question": "What do you understand about components in React?",
      "options": [
        "Components are elements in the DOM",
        "Components are classes that extend React.Component",
        "Components are objects that manage state",
        "Components are functions that return JSX"
      ],
      "correctOption": 3,
      "points": 10
    },
    {
      "question": "Name the two types of components in React.",
      "options": [
        "Parent components and Child components",
        "Functional components and Class components",
        "Stateful components and Stateless components",
        "Pure components and Impure components"
      ],
      "correctOption": 1,
      "points": 20
    },
    {
      "question": "What are Synthetic events in React?",
      "options": [
        "Events generated by React components",
        "Events that occur during component rendering",
        "Events that are not native to the browser",
        "Events triggered by user interactions"
      ],
      "correctOption": 2,
      "points": 30
    },
    {
      "question": "Which stage of a React Component’s life involves rendering the JSX returned by the render method?",
      "options": ["Initialization", "Mounting", "Updating", "Destruction"],
      "correctOption": 1,
      "points": 10
    },
    {
      "question": "What is the purpose of the Switch component in React Router?",
      "options": [
        "To toggle between different routes",
        "To render only the first matching route",
        "To handle form submissions",
        "To manage state between components"
      ],
      "correctOption": 2,
      "points": 20
    },
    {
      "question": "Which component checks the current URL and displays the associated component based on the exact path?",
      "options": ["<Link>", "<Switch>", "<Route>", "<Router>"],
      "correctOption": 2,
      "points": 20
    },
    {
      "question": "What is the purpose of the useEffect hook in React?",
      "options": [
        "To manage component state",
        "To handle form submissions",
        "To create custom hooks",
        "To perform side effects in functional components"
      ],
      "correctOption": 3,
      "points": 20
    },
    {
      "question": "What is the purpose of the key prop in React when rendering a list of components?",
      "options": [
        "To uniquely identify each component in the list",
        "To set the initial state of the component",
        "To define custom event handlers",
        "To control the rendering order of components"
      ],
      "correctOption": 0,
      "points": 20
    }
  ]
}
